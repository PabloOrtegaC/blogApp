name: Build and Deploy API to GCP

on:
  push:
    branches:
      - main

jobs:
  build-deploy:
    name: Build, Analyze, and Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}

      - name: Write GCP Service Account Key to File
        run: |
          printf '%b' "${{ secrets.GCP_SA_KEY }}" > ${HOME}/gcloud-service-key.json
        
      - name: Authenticate with Google Cloud
        run: |
          gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json

      - name: Build Docker Image
        run: |
          docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/my-fastapi-app:${{ github.sha }} .

      - name: Push Docker Image to GCR
        run: |
          docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/my-fastapi-app:${{ github.sha }}

      - name: Deploy to Compute Engine
        run: |
          # Set the zone and instance group name (update these values to match your environment)
          ZONE="us-central1-c"
          INSTANCE_GROUP="blogapp-back"  # Replace with your instance group name

          # New container image built from this commit
          IMAGE="gcr.io/${{ secrets.GCP_PROJECT_ID }}/my-fastapi-app:${{ github.sha }}"

          # Resize the instance group to ensure you have two instances
          gcloud compute instance-groups managed resize $INSTANCE_GROUP --size=2 --zone=$ZONE

          # Perform a rolling update to replace the container on the instances with the new image
          gcloud compute instance-groups managed rolling-action start-update $INSTANCE_GROUP \
            --version=template=container-vm-template,container-image=$IMAGE \
            --zone=$ZONE
